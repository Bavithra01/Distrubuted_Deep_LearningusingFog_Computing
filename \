<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Object Detection Demo</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
            min-height: 100vh;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            display: flex;
            justify-content: center;
            align-items: center;
        }
        .container {
            background-color: rgba(255, 255, 255, 0.95);
            max-width: 800px;
            width: 100%;
            margin: 20px;
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
        }
        header {
            text-align: center;
            margin-bottom: 30px;
        }
        h1 {
            color: #4a4a4a;
            font-size: 2.5em;
            margin-bottom: 10px;
        }
        .ip-input {
            margin-bottom: 20px;
        }
        .ip-input label {
            display: block;
            margin-bottom: 5px;
            color: #4a4a4a;
            font-weight: bold;
        }
        .ip-input input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 16px;
        }
        .upload-container {
            margin-bottom: 20px;
        }
        .control-buttons {
            display: flex;
            gap: 10px;
            margin-bottom: 15px;
        }
        button {
            padding: 12px 20px;
            color: white;
            border: none;
            cursor: pointer;
            border-radius: 6px;
            font-size: 16px;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        button i {
            margin-right: 8px;
        }
        #uploadButton {
            background-color: #4CAF50;
        }
        #detectButton {
            background-color: #2196F3;
        }
        button:hover {
            opacity: 0.9;
            transform: translateY(-2px);
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }
        button:disabled {
            background-color: #cccccc;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }
        #imageContainer {
            position: relative;
            margin-bottom: 20px;
            max-width: 100%;
            overflow: hidden;
            border-radius: 8px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }
        #uploadedImage {
            max-width: 100%;
            display: block;
            border-radius: 8px;
        }
        .bounding-box {
            position: absolute;
            border: 2px solid #FF4136;
            background-color: rgba(255, 65, 54, 0.2);
        }
        .label {
            position: absolute;
            top: -25px;
            left: 0;
            background-color: #FF4136;
            color: white;
            padding: 3px 8px;
            font-size: 12px;
            white-space: nowrap;
            border-radius: 3px;
        }
        #resultList {
            margin-top: 20px;
        }
        .loading {
            display: none;
            margin-top: 10px;
            color: #4a4a4a;
            font-style: italic;
        }
        #errorMessage {
            color: #dc3545;
            margin-top: 10px;
            display: none;
            padding: 10px;
            background-color: #f8d7da;
            border-radius: 4px;
        }
        footer {
            margin-top: 30px;
            text-align: center;
            color: #6c757d;
            font-size: 0.9em;
        }
        @media (max-width: 600px) {
            .container {
                padding: 20px;
            }
            h1 {
                font-size: 2em;
            }
            .control-buttons {
                flex-direction: column;
            }
            button {
                width: 100%;
            }
        }
    </style>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/js/all.min.js"></script>
</head>
<body>
    <div class="container">
        <header>
            <h1>Object Detection Demo</h1>
        </header>
        <main>
            <div class="ip-input">
                <label for="masterIP">Master IP:</label>
                <input type="text" id="masterIP" placeholder="Enter Master IP">
            </div>
            <div class="upload-container">
                <div class="control-buttons">
                    <button id="uploadButton"><i class="fas fa-upload"></i> Upload Image</button>
                    <button id="detectButton"><i class="fas fa-search"></i> Detect Objects</button>
                </div>
                <div id="loadingIndicator" class="loading">
                    <i class="fas fa-spinner fa-spin"></i> Processing...
                </div>
                <div id="errorMessage"></div>
            </div>
            <div id="imageContainer"></div>
            <div id="resultList"></div>
        </main>
        <footer>
            <p>&copy; 2024 Object Detection Demo. All rights reserved.</p>
        </footer>
    </div>
    <script>
        let selectedFile = null;

        document.getElementById('uploadButton').addEventListener('click', () => {
            const input = document.createElement('input');
            input.type = 'file';
            input.accept = 'image/*';
            input.onchange = (event) => {
                selectedFile = event.target.files[0];
                const reader = new FileReader();
                reader.onload = (e) => {
                    const img = document.createElement('img');
                    img.src = e.target.result;
                    img.id = 'uploadedImage';
                    const container = document.getElementById('imageContainer');
                    container.innerHTML = '';
                    container.appendChild(img);
                    document.getElementById('detectButton').style.display = 'inline-block';
                };
                reader.readAsDataURL(selectedFile);
            };
            input.click();
        });

        document.getElementById('detectButton').addEventListener('click', async () => {
            if (!selectedFile) {
                showError('Please upload an image first.');
                return;
            }

            const masterIP = document.getElementById('masterIP').value;
            if (!masterIP) {
                showError('Please enter the Master IP.');
                return;
            }

            showLoading(true);
            clearError();

            const formData = new FormData();
            formData.append('image', selectedFile);

            try {
                const response = await fetch(`http://${masterIP}/ObjectFog/updated-arbiter-object-detection.php`, {
                    method: 'POST',
                    body: formData
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const result = await response.json();
                displayResults(result);
            } catch (error) {
                showError(`Error: ${error.message}`);
            } finally {
                showLoading(false);
            }
        });

        function displayResults(results) {
            const container = document.getElementById('imageContainer');
            const img = document.getElementById('uploadedImage');
            const imgRect = img.getBoundingClientRect();

            results.forEach(result => {
                const box = document.createElement('div');
                box.className = 'bounding-box';
                box.style.left = `${result.bbox[0] * imgRect.width}px`;
                box.style.top = `${result.bbox[1] * imgRect.height}px`;
                box.style.width = `${result.bbox[2] * imgRect.width}px`;
                box.style.height = `${result.bbox[3] * imgRect.height}px`;

                const label = document.createElement('div');
                label.className = 'label';
                label.textContent = `${result.class} (${(result.score * 100).toFixed(2)}%)`;

                box.appendChild(label);
                container.appendChild(box);
            });

            const resultList = document.getElementById('resultList');
            resultList.innerHTML = '<h3>Detected Objects:</h3>';
            const ul = document.createElement('ul');
            results.forEach(result => {
                const li = document.createElement('li');
                li.textContent = `${result.class}: ${(result.score * 100).toFixed(2)}% confidence`;
                ul.appendChild(li);
            });
            resultList.appendChild(ul);
        }

        function showLoading(show) {
            document.getElementById('loadingIndicator').style.display = show ? 'block' : 'none';
        }

        function showError(message) {
            const errorElement = document.getElementById('errorMessage');
            errorElement.textContent = message;
            errorElement.style.display = 'block';
        }

        function clearError() {
            const errorElement = document.getElementById('errorMessage');
            errorElement.textContent = '';
            errorElement.style.display = 'none';
        }
    </script>
</body>
</html>
